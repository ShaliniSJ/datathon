balagavi dist
bangaluru dist
cid
coastal security police
huballi Dharwad city
isd bengaluru
kgf
Kalaburagi city
Kalaburagi railways
mangaluru city
Mysuru dist




import streamlit as st
from streamlit_folium import folium_static
import folium
import json
import math

# Load the GeoJSON file
geojson_path = 'C:\\Users\\Legion\\Desktop\\KSP DATATHON\\datathon\\functional_components\\images\\karnataka.json'
with open(geojson_path, 'r') as f:
    geojson_data = json.load(f)

# Initialize the session state for the currently selected district and zoom level
if 'selected_district' not in st.session_state:
    st.session_state.selected_district = None
if 'zoom_level' not in st.session_state:
    st.session_state.zoom_level = 6
if 'initial_location' not in st.session_state:
    st.session_state.initial_location = [12.9716, 77.5946]

# Function to calculate zoom level based on map bounds and window size
def calculate_zoom_level(min_lon, min_lat, max_lon, max_lat):
    WORLD_DIM = {'height': 256, 'width': 256}
    ZOOM_MAX = 21

    lat_rad = math.radians(max_lat)
    n = 2.0 ** ZOOM_MAX
    zoom_lat_rad = math.log(n * (1 + math.sin(lat_rad)) / (1 - math.sin(lat_rad))) / 2.0
    zoom_lat_deg = math.degrees(zoom_lat_rad)

    lat_fraction = (zoom_lat_deg + max_lat) / max_lat
    lng_delta_deg = max_lon - min_lon
    lng_delta_zoomed = lng_delta_deg * lat_fraction

    return int(ZOOM_MAX - math.log(WORLD_DIM['width'] / lng_delta_zoomed) / math.log(2))

# Create a base map with the initial location
m = folium.Map(location=st.session_state.initial_location, zoom_start=st.session_state.zoom_level)

# Define a function to change the color of the districts based on selection
def style_function(feature):
    district_name = feature['properties']['district']  # Make sure this matches your GeoJSON property
    if district_name == st.session_state.selected_district:
        return {'fillColor': 'green', 'color': 'black', 'weight': 1, 'fillOpacity': 0.6}
    else:
        return {'fillColor': 'blue', 'color': 'black', 'weight': 1, 'fillOpacity': 0.6}

# Create a GeoJson layer
geojson_layer = folium.GeoJson(
    geojson_data,
    name='Karnataka',
    style_function=style_function
)
geojson_layer.add_to(m)

# Display the map
folium_static(m)

# Simulate district selection
district_options = [feature['properties']['district'] for feature in geojson_data['features']]  # Use the correct key here
selected_district = st.selectbox('Select a district:', district_options)

# Check if the selected district has changed
if st.session_state.selected_district != selected_district:
    # Update the selected district
    st.session_state.selected_district = selected_district
    # Zoom to the selected district
    district_geometry = next((feature['geometry'] for feature in geojson_data['features'] if feature['properties']['district'] == selected_district), None)
    if district_geometry:
        bounds = folium.GeoJson(district_geometry).get_bounds()
        zoom_level = calculate_zoom_level(bounds[0][0], bounds[0][1], bounds[1][0], bounds[1][1])
        st.session_state.zoom_level = zoom_level
        m.fit_bounds(bounds, padding=(20, 20))  # Adjust padding
    # Update the style of the existing GeoJson layer
    geojson_layer.style_function = style_function
    folium_static(m)

# Add a "Clear" button to clear all district highlights and reset the map to its original state
if st.button('Clear'):
    st.session_state.selected_district = None
    st.session_state.zoom_level = 6
    m.location = st.session_state.initial_location  # Reset to initial location
    m.zoom_start = st.session_state.zoom_level
    geojson_layer.style_function = style_function  # Update the style to clear the highlights
    folium_static(m)
